/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Farming, FarmingInterface } from "../Farming";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "HUNDRED_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountOfEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_percentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_epochDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOfEpochs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e97380380610e9783398101604081905261002f91610087565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316179055600280549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b610dce806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063c78ad77f11610066578063c78ad77f14610212578063dcbab6081461021b578063f7c618c11461022e578063f93804351461024157600080fd5b80638da5cb5b14610182578063a87430ba14610195578063b31f8f93146101f6578063b6b55f25146101ff57600080fd5b80634ff0876a116100d35780634ff0876a1461012e5780636ed93dd01461014557806372f702f31461014e57806378e979251461017957600080fd5b8063158ef93e146100fa578063372500ab1461011c5780633ccfd60b14610126575b600080fd5b6008546101079060ff1681565b60405190151581526020015b60405180910390f35b61012461024a565b005b6101246104f8565b61013760065481565b604051908152602001610113565b61013761271081565b600154610161906001600160a01b031681565b6040516001600160a01b039091168152602001610113565b61013760055481565b600054610161906001600160a01b031681565b6101d06101a3366004610c2d565b60096020526000908152604090208054600182015460028301546003909301549192909160ff9091169084565b604080519485526020850193909352901515918301919091526060820152608001610113565b61013760035481565b61012461020d366004610c5d565b610653565b61013760045481565b610124610229366004610c76565b61080f565b600254610161906001600160a01b031681565b61013760075481565b3360009081526009602052604090206002015460ff16156102b25760405162461bcd60e51b815260206004820152601860248201527f596f7520646f6e277420686176652061206465706f736974000000000000000060448201526064015b60405180910390fd5b6006543360009081526009602052604090206001015442916102d391610cc7565b106103205760405162461bcd60e51b815260206004820152601960248201527f5468652045706f6368206973206e6f74206f766572207965740000000000000060448201526064016102a9565b600654336000908152600960205260408120600101549091906103439042610ce0565b61034d9190610cf3565b905060075481111561035e57506007545b33600090815260096020526040812060038101546004549154909184916103889061271090610cf3565b6103929190610d15565b61039c9190610d15565b6103a69190610ce0565b90508060000361041e5760405162461bcd60e51b815260206004820152602b60248201527f596f752068617665206e6f2072657761726420617661696c61626c6520666f7260448201527f207769746864726177616c00000000000000000000000000000000000000000060648201526084016102a9565b60025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561046f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104939190610d2c565b5033600090815260096020526040812060030180548392906104b6908490610cc7565b909155505060408051338152602081018390527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a910160405180910390a15050565b336000908152600960205260409020546105545760405162461bcd60e51b815260206004820152601860248201527f596f7520646f6e277420686176652061206465706f736974000000000000000060448201526064016102a9565b336000908152600960205260408120805490829055600380549192839261057c908490610cc7565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190610d2c565b5033600081815260096020908152604080832060028101805460ff191660011790556003019290925590519182527ff67611512e0a2d90c96fd3f08dca4971bc45fba9dc679eabe839a32abbe58a8e91015b60405180910390a150565b4260055411156106a55760405162461bcd60e51b815260206004820152601660248201527f4661726d696e67206973206e6f7420757020796574210000000000000000000060448201526064016102a9565b6003548111156106f75760405162461bcd60e51b815260206004820152601b60248201527f546f6f206d616e7920746f6b656e7320636f6e7472696275746564000000000060448201526064016102a9565b33600090815260096020526040902054156107545760405162461bcd60e51b815260206004820152601a60248201527f596f7520616c726561647920686176652061206465706f73697400000000000060448201526064016102a9565b6040805160808101825282815242602080830191825260008385018181526060850182815233835260099093529481209351845591516001840155925160028301805460ff1916911515919091179055915160039182015580548392906107bc908490610ce0565b90915550506001546107d9906001600160a01b0316333084610924565b60408051338152602081018390527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49101610648565b6000546001600160a01b031633146108695760405162461bcd60e51b815260206004820152600c60248201527f4e6f7420616e206f776e6572000000000000000000000000000000000000000060448201526064016102a9565b60085460ff16156108bc5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064016102a9565b6008805460ff191660011790556003859055600484905560058190556007829055600683905561091d3330612710856108f5898b610d15565b6108ff9190610d15565b6109099190610cf3565b6002546001600160a01b0316929190610924565b5050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610993908590610999565b50505050565b60006109ee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a869092919063ffffffff16565b9050805160001480610a0f575080806020019051810190610a0f9190610d2c565b610a815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102a9565b505050565b6060610a958484600085610a9d565b949350505050565b606082471015610b155760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102a9565b600080866001600160a01b03168587604051610b319190610d72565b60006040518083038185875af1925050503d8060008114610b6e576040519150601f19603f3d011682016040523d82523d6000602084013e610b73565b606091505b5091509150610b8487838387610b8f565b979650505050505050565b60608315610bfe578251600003610bf7576001600160a01b0385163b610bf75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102a9565b5081610a95565b610a958383815115610c135781518083602001fd5b8060405162461bcd60e51b81526004016102a99190610d8e565b600060208284031215610c3f57600080fd5b81356001600160a01b0381168114610c5657600080fd5b9392505050565b600060208284031215610c6f57600080fd5b5035919050565b600080600080600060a08688031215610c8e57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cda57610cda610cb1565b92915050565b81810381811115610cda57610cda610cb1565b600082610d1057634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610cda57610cda610cb1565b600060208284031215610d3e57600080fd5b81518015158114610c5657600080fd5b60005b83811015610d69578181015183820152602001610d51565b50506000910152565b60008251610d84818460208701610d4e565b9190910192915050565b6020815260008251806020840152610dad816040850160208701610d4e565b601f01601f1916919091016040019291505056fea164736f6c6343000811000a";

export class Farming__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Farming> {
    return super.deploy(
      _stakingToken,
      _rewardToken,
      overrides || {}
    ) as Promise<Farming>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardToken,
      overrides || {}
    );
  }
  attach(address: string): Farming {
    return super.attach(address) as Farming;
  }
  connect(signer: Signer): Farming__factory {
    return super.connect(signer) as Farming__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FarmingInterface {
    return new utils.Interface(_abi) as FarmingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Farming {
    return new Contract(address, _abi, signerOrProvider) as Farming;
  }
}
